# Strict indentaion syntax! (we can use online YAML validators to check indentation)
# Each configuration file has 3 parts

# Part 1: metadata
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "2"
  creationTimestamp: "2022-06-10T02:52:11Z"
  generation: 2
  labels:
    app: nginx-dpl
  name: nginx-dpl
  namespace: default
  resourceVersion: "771"
  uid: 4982d2ff-14c5-4a1d-afbd-aa0ce9d59c8b

# Part 2: specification
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: nginx-dpl
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: nginx-dpl
    spec:
      containers:
      - image: nginx:1.16
        imagePullPolicy: Always
        name: nginx
        ports:
        - containerPort: 8080
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
# Part 3: status (will be generated if not specified)

status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2022-06-10T02:52:27Z"
    lastUpdateTime: "2022-06-10T02:52:27Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2022-06-10T02:52:11Z"
    lastUpdateTime: "2022-06-10T02:56:30Z"
    message: ReplicaSet "nginx-dpl-67bdc869cf" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 2
  readyReplicas: 1